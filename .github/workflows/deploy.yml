name: Deploy PersonalPortfolio

on:
  push:
    branches: [ "main" ]
  workflow_dispatch:

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    env:
      BUILD_DIR: build
      RELEASES_DIR: /var/www/PersonalPortfolio/releases

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Use Node (.nvmrc)
        uses: actions/setup-node@v4
        with:
          node-version-file: '.nvmrc'
          cache: 'npm'

      - name: Install deps & build
        run: |
          npm ci --omit=dev
          npm run build
          test -d "$BUILD_DIR" || (echo "Build output '$BUILD_DIR' not found" && exit 1)

      - name: Prepare SSH (UPLOAD key)
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.UPLOAD_KEY_B64 }}" | base64 -d > ~/.ssh/id_upload
          chmod 600 ~/.ssh/id_upload
          ssh-keyscan -H "${{ secrets.DEPLOY_HOST }}" >> ~/.ssh/known_hosts

      - name: Make release name
        id: rel
        run: |
          ts="$(date +%Y%m%d-%H%M%S)"
          sha="$(git rev-parse --short HEAD)"
          echo "name=${ts}-${sha}" >> "$GITHUB_OUTPUT"

      - name: Create release dir on server (UPLOAD key)
        run: |
          ssh -i ~/.ssh/id_upload ${{ secrets.DEPLOY_USER }}@${{ secrets.DEPLOY_HOST }} \
            "mkdir -p $RELEASES_DIR/${{ steps.rel.outputs.name }}"

      - name: Upload build via rsync (UPLOAD key)
        run: |
          rsync -az --delete -e "ssh -i ~/.ssh/id_upload" "$BUILD_DIR"/ \
            ${{ secrets.DEPLOY_USER }}@${{ secrets.DEPLOY_HOST }}:$RELEASES_DIR/${{ steps.rel.outputs.name }}/

      - name: Prepare SSH (ACTIVATE key for forced-command)
        run: |
          echo "${{ secrets.DEPLOY_KEY }}" > ~/.ssh/id_activate
          chmod 600 ~/.ssh/id_activate

      - name: Activate release (forced-command uses arg)
        run: |
          ssh -T -i ~/.ssh/id_activate \
            ${{ secrets.DEPLOY_USER }}@${{ secrets.DEPLOY_HOST }} \
            "${{ steps.rel.outputs.name }}"

      - name: Keep last 5 releases (UPLOAD key)
        run: |
          ssh -i ~/.ssh/id_upload ${{ secrets.DEPLOY_USER }}@${{ secrets.DEPLOY_HOST }} \
            "ls -1dt $RELEASES_DIR/* | tail -n +6 | xargs -r rm -rf"
